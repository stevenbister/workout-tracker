/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LogoutImport } from './routes/logout'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedWorkoutsImport } from './routes/_authenticated/workouts'
import { Route as AuthenticatedProfileImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedRoutinesRoutineIdImport } from './routes/_authenticated/routines/$routineId'
import { Route as AuthenticatedExercisesExerciseIdImport } from './routes/_authenticated/exercises/$exerciseId'

// Create/Update Routes

const LogoutRoute = LogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedWorkoutsRoute = AuthenticatedWorkoutsImport.update({
  id: '/workouts',
  path: '/workouts',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProfileRoute = AuthenticatedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedRoutinesRoutineIdRoute =
  AuthenticatedRoutinesRoutineIdImport.update({
    id: '/routines/$routineId',
    path: '/routines/$routineId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedExercisesExerciseIdRoute =
  AuthenticatedExercisesExerciseIdImport.update({
    id: '/exercises/$exerciseId',
    path: '/exercises/$exerciseId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/workouts': {
      id: '/_authenticated/workouts'
      path: '/workouts'
      fullPath: '/workouts'
      preLoaderRoute: typeof AuthenticatedWorkoutsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/exercises/$exerciseId': {
      id: '/_authenticated/exercises/$exerciseId'
      path: '/exercises/$exerciseId'
      fullPath: '/exercises/$exerciseId'
      preLoaderRoute: typeof AuthenticatedExercisesExerciseIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/routines/$routineId': {
      id: '/_authenticated/routines/$routineId'
      path: '/routines/$routineId'
      fullPath: '/routines/$routineId'
      preLoaderRoute: typeof AuthenticatedRoutinesRoutineIdImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedWorkoutsRoute: typeof AuthenticatedWorkoutsRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedExercisesExerciseIdRoute: typeof AuthenticatedExercisesExerciseIdRoute
  AuthenticatedRoutinesRoutineIdRoute: typeof AuthenticatedRoutinesRoutineIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedWorkoutsRoute: AuthenticatedWorkoutsRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedExercisesExerciseIdRoute: AuthenticatedExercisesExerciseIdRoute,
  AuthenticatedRoutinesRoutineIdRoute: AuthenticatedRoutinesRoutineIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/workouts': typeof AuthenticatedWorkoutsRoute
  '/': typeof AuthenticatedIndexRoute
  '/exercises/$exerciseId': typeof AuthenticatedExercisesExerciseIdRoute
  '/routines/$routineId': typeof AuthenticatedRoutinesRoutineIdRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/workouts': typeof AuthenticatedWorkoutsRoute
  '/': typeof AuthenticatedIndexRoute
  '/exercises/$exerciseId': typeof AuthenticatedExercisesExerciseIdRoute
  '/routines/$routineId': typeof AuthenticatedRoutinesRoutineIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/workouts': typeof AuthenticatedWorkoutsRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/exercises/$exerciseId': typeof AuthenticatedExercisesExerciseIdRoute
  '/_authenticated/routines/$routineId': typeof AuthenticatedRoutinesRoutineIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/logout'
    | '/profile'
    | '/workouts'
    | '/'
    | '/exercises/$exerciseId'
    | '/routines/$routineId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/logout'
    | '/profile'
    | '/workouts'
    | '/'
    | '/exercises/$exerciseId'
    | '/routines/$routineId'
  id:
    | '__root__'
    | '/_authenticated'
    | '/login'
    | '/logout'
    | '/_authenticated/profile'
    | '/_authenticated/workouts'
    | '/_authenticated/'
    | '/_authenticated/exercises/$exerciseId'
    | '/_authenticated/routines/$routineId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/login",
        "/logout"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/profile",
        "/_authenticated/workouts",
        "/_authenticated/",
        "/_authenticated/exercises/$exerciseId",
        "/_authenticated/routines/$routineId"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/profile.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/workouts": {
      "filePath": "_authenticated/workouts.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/exercises/$exerciseId": {
      "filePath": "_authenticated/exercises/$exerciseId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/routines/$routineId": {
      "filePath": "_authenticated/routines/$routineId.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
